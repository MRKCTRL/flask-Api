span
  annotate small peices of text
  add specific behavior to this element
  e.g
<p> tick available is extremely limited</p>
<span>extemely</span>
use the
  <em>extremely</em>

a
  'anchors' used for links
  one of the most important links
  <a href="google.com">Go to google</a>

ol, ul and li
  'ordered' and 'unordered' lists
  li is used inside both
  e.g of ordered list
    <ol>
    <li>step </li>
    <li>step 2</li>
    <li>step 3</li>
    <li>step 4</li>

    </ol>

e.g of unordered list
  <ul>
  <li>step 3</li>
  <li>step 2</li>
  <li>step 1</li>
  </ul>

form
  vital and used everwhere
  there are lots of elements used in forms

  form attributes

  <form action="/login" method="post">

  ... form content goes here

  </form>


img
  one of several used for displaying images
  the src attribute

  <img src="https://placekitten.com/200/300" />

  the alt attribute
  <img
  src="https://placekitten.com/200/300"
  alt='a cute fluffy kitten'
   />

flow content
  typically, text or embedded content(like images or videos)
  most html elements are part of this category

    things like forms are not
    flow content has multiple subcategories

sectioning content
     sectioning - elements for group other elments into collections

  special container elements used for grouping other elements into meaningful collections
     for example, <article>,<article<,<section> or <nav>
  notably, <head>,<main> and <footer> are not considered sectioning content. instead they are flow content


heading
  elements for defining titles of a section
  reserved for the six heading elements, from <h1> to <h6>
  heading elements can only conatin pharasing content


pharasing content
  plain text elements(or elements that become plain text)
  fot the most part, this is text and marlup of that text(such as emphasis elements)
  if it can be inside a sentence, its likely a phrasing content
  it can also contain images, audio, video, and other. those elements become plain text if the revevant resource cant be retrieved

the mozilla developer network
  mozilla(web tech)

section
  contains thematically related elements
  the section element is part of a whole

  example: merch and blog
  <body>
  <section>
  merch
  </section>
  <section>
  blog post
  </section>

  </body>
  generally sections contains a heading

article
  self-contained composition

  example weather forecast

  <article class="forecast">
    <h1>Weather forecast for jhb</h1>
    <article class="day forecast">
      <h2>02 dec 2023</h2>
      <p>rain</p>
    </article>
    <article class="day-forecast">
      <h2>04 dec 2023</h2>
      <p>periods of sunshine</p>
    </article>
    <article class="day-forecast">
      <h2>05 dec 2023</h2>
      <p>heavy rain</p>
    </article>
  </article>

div
  very generic, so useful for grouping
  mainly used to aid in styling a page

  take a moment to think if you can use something else instead

head
  introductory content
  headers bars with logo and navigation
  you can use header inside section and article, to put the title and other information

  the header can also be used inside other semantic elements such as <article> or <section>. a section header might conatin the sections heading, author, name, etc. <article>, <section>, <aside>, and <nav> can have ther own <header>

 nav
	major navigation blocks in the site
	often inside a header

main
	the main content of the document(what is unique of this page)
	only 1 per page, inside the body

	support for older browser

  <main role="main">
    <!-- main content goes here -->
  </main>

  footer
  social media links
  secondary navigation
  site smallprint
  you can use footer inside articles or sections, but they should be related to the parent element

what are trying to describe?
  html is used to descrtibe the meaing of the page's content
  in other words: the role of a block content in the contect of the whole document
  html is not for describing what a page looks like-like colors, size, shadows, etc

default styles
  your browser applies some default styles to every element
  for example, <b> and <strong> elements will generally be rendered as bold
  but you should avoid using html for visual effect

  <p> this is some <em>loerm ipsum</em> text</p>

  <p> this some <i lang="la"> lorem ipsum</i> text</p>

who are we describing the content for?
  html is for computers to read
  computers turn the html into things the user sees!
  html is also vital for things like screen readers, where good markup can make navigation much easier

use HTML to describe the content. Use CSS to style the output


named colors
  css comes with dozen of re-defined colurs
  however, we can also define ourown colours
  some colournames areare aliases for other colours(such as gray and grey)

what is rgb?
  an additive colour model that uses Red,Green, and Blue
  for each colour, use a value between 0 and 255
    whit is rgb(255,255, 255)
    black is rgb (0, 0, 0)
    purple is rgb (128, 0, 128)

what is hexadecimal
  hexadecimal is a base-16 number system, using the numerals 0-9, aswell as a,b,c, d, e and f(meaning 10,11,12,13,14 and15)
  the hexadecimal ff is equilavlet to the decimal value 255

rgb and hexadecimal
  css colours can be represented as three pairs of hexadecimal numbers, such as #ff00ff meaning 255,0,255
  so we cab use a single hexadecimal number instead of three decimal numbers, which is more succint

what is hsl
  stands for hue, saturation  and lightness
  it uses a cyclindrical model to represent the colour space
  the hue is represented by am mgle between 0 and 360
  that is due to increased saturation
  lightness is the third dimension, where 100% gives us white and 0% gives us black

  at lightness of 50%
  and a saturation of 100%
  we get the most saturated version of a given hue
  purple (the named colour) in hsl is hsl(300,100%,25%)
    alternatively you can write hsl(300deg,100%,25%)

working with colour opacity
  rgb and hsl can make use of an alpha channel, which represents opacity
  rgba(128, 0, 128, 50%) is 50% transparent purple

some propertis that dont inherit by default, first type layout, the margins, paddings, size(width and heigh) border

what is the box-model
  a really important concept
  it determines the overall size and shape of an element on the page
  made up of: content are, padding, border, and margin
  the standardand height properties for an element change the size of its content area ]
  width: 300px;
  height: 50px;
  padding: 10px;

the standard box model
    so if we want the element to have a final width 300px, we need to do
    final width= width - vertical borders -vertical padding.
the alternative box model
  the size of an element is calculated as the content size + padding + border
  margin is still calculated separately, since its separate elements from each other
  i recommend you use the alternativebox modelfor all elements

block vs inline elements
  Everything we've talked about applies only to elemnts being displayed as blocks
  for inline elements
  we cant set explicit width and height, these are set by the content
  qw cabt create space above and below them with paddings, margin,borders(left and right still works)

what is specificity?
  a mechanism used by browser to determine which property declaration are applied
  the selectors of a property determine the specificity weight
  the property with the highet weight, wins and is applied to the element

the weighting system
  different types of selector contribute differently to overall specificity
  a selector with higher weight  beats any number of selectors with a lower weight
  overridding specificity with !important
  e.g div ul li {
    background-color: blue !important;
  }

for any non-important declarations..
  we look at specificity
  remember, !important only affects single declarations
what is bem?
  a css methodolohy and a naming scheme
  uses classes almost exclusively(no other selectors)
  this helps with specificity
  BEM stands fr block element modifier,lets take a look
  block meaningful,standalone entities .
  block classes are generally single words
  elements are separated with double score
  part of a block
  its meaning is tid to the block
  writteen using the block class and double underscore

modifiers
   variant of the basic styles for a block or element
   uses the block element class and a double hypen
   these are vital for creating reusable styles

1.become a User(or have one in your team)
  have the client inyour team
  plan with team
  show them the finished product
  planning everey 2-3 weeks gives you enough time to completework,andlowers risk risk of planning waste
2.populate the  backlog with help from the user
  understand how the software will help the user
  shrink and re-think until you have something useful in one sprint
  the client can add or remove work from the backlog at any time
  xhanging the planned work is a bit disruptive
3.make the working software
  desiggn + code
4.review and change plan
  user testing and review
  every sprint show off your working software
  client gives you feedback
  youget a morale boost
5.improve your process.
  very important
  periodically review your processess and and ways of working
  ensure everyone feels safe saying what they are thinking


comparison: svg and bitmap
  bitmaps have a defined number of pixels
  svgs are defined as mathematical function
  svgs are usually smaller(but not when used for things like photos)

what is an svg?

<svg width="" height="" viewbox="">
 <path d="" fill=""/>
</svg>


jinja2
  variable = {{ }}


nosql
  the name says it all:no sql
  databases using varying ways of storing data to provide a variety of beneifts
  bu there also drawbacks

  mongoDB

  doesnt use tables with columns
  instead it uses collections iwth documents
  a document can contain whatever you want
  every document can be different from every other document in a collection

what does a document look like?
  {
  _id: objectId('54894')
  username: '87bgg7d'
  contact: {
  phone: '123456789'

  email: '12515611.admin'
  },
  access: {
  level: 5,
  group: 'dev'
  }
  }

beneifts of mongoDB
  more flexibility since there is no fixed schema
  this can lead to faster development times
  data storage(json) is similar to python dict, so it lends well since less code is needed for mapping data
  mongodb scalability model is straightforward

  drawbacks of Mongofb
  no native joins. you can join manually with python code, but performance is much worse than native sql joins
  storing the key name for each field in every document results   in high memory usage
  there are limits to the size of documents and amount of nesting within documents

what happens when we run our app
  we are able to 'listen' to incoming requests
  out flask app deals with them and responds appropriately
  but who can make requests
  the answer: anyone who has access to the computer running the app


accesing the computers openly
  most computers are set up to not be accessilble easily from the 'the outside'
  that is mostly for secruity reasions
  but also, every internet-connected device has an ip address that other internet-connected devices can use to connect to it
  most isps do not provide fixed ip addresses

why we deploy our apps?
  when we deploy, we put our code and run it in a computer that:
    has a fixed ip address
    is open to connections
    has hardware specifically designed to be cheap and efficient when handling web applications 
